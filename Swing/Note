package ex12;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.io.*;

public class Note extends JFrame{
	// 변수 선언
	JTextArea text;
	Container pane;
	JMenuBar nb = new JMenuBar();
	JMenu file, color, help;
	JMenuItem newI, openI, saveI, closeI, infoI, helpI, tcolor, tsize;
	JFileChooser open = new JFileChooser(); 
	// 파일 및 디렉토리 선택 컴포넌트 선언
	Note(){
		pane = getContentPane();  // JFrame에  디자인을 위한 컨텐츠 영역 선언
		pane.setLayout(new BorderLayout());
		setJMenuBar(nb); // 메뉴바 붙임
		
		// 메뉴 및 메뉴 아이템 생성
		file = new JMenu("파일(F)");
		color = new JMenu("색상(C)");
		help = new JMenu("정보(I)");
		
		// 키보드 연상기호 설정
		
		file.setMnemonic('F');
		help.setMnemonic('I');
		
		// 파일 메뉴 내용 생성
		newI = new JMenuItem("새파일");
		openI = new JMenuItem("열기");
		saveI = new JMenuItem("저장");
		closeI = new JMenuItem("닫기");
		
		// 파일 메뉴 단축키 설정을 위한 셋팅
		newI.setAccelerator(KeyStroke.getKeyStroke('N',Event.CTRL_MASK));
		// ctrl + N
		openI.setAccelerator(KeyStroke.getKeyStroke('O',Event.CTRL_MASK));
		saveI.setAccelerator(KeyStroke.getKeyStroke('S',Event.CTRL_MASK));
		closeI.setAccelerator(KeyStroke.getKeyStroke('Q',Event.CTRL_MASK));
		
		// 색상 메뉴 설정
		tcolor = new JMenuItem("글자색");
		tsize = new JMenuItem("글자 크기");
		
		
		
		// 정보 메뉴 설정
		infoI = new JMenuItem("정보");
		infoI.setAccelerator(KeyStroke.getKeyStroke('I',Event.CTRL_MASK));
		
		// 메뉴에 내용 붙임
		file.add(newI);
		file.add(openI);
		file.add(saveI);
		file.add(closeI);
		help.add(infoI);
		
		
		color.add(tcolor);
		color.add(tsize);
		// 메뉴 완성
		nb.add(file);
		nb.add(color);
		nb.add(help);
		
		
		// 메뉴에서 새파일을 클릭했을 때 이벤트 처리
		newI.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				text.setText("");  // text의 내용을 모두 지운다.
				
			}
		});
		
		// 메뉴에서 열기 메뉴를 클릭했을 때 이벤트 처리
		openI.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				int re = open.showOpenDialog(Note.this);
				// 파일 열기 다이얼 로그 창을 띄움
				if(re == JFileChooser.APPROVE_OPTION) {
					// 리턴 상태 확인
					String fN;
					String dir;
					String str;
					// 선택한 파일명을 가져옴
					File file_open = open.getSelectedFile();
					// 파일 시스템의 파일 입력 바이트취급 스트림 선언
					FileInputStream fis;
					// 데이트 바이트 배열에 입력시키는 출력 스트림 선언
					ByteArrayOutputStream bo;
					
					try {
						fis = new FileInputStream(file_open);
						bo = new ByteArrayOutputStream();
						int i=0;
						while((i=fis.read()) != -1) {  // 파일의 끝
							bo.write(i);
							// 1en 바이트를 바이트 배열 출력 Stream
						}
						text.setText(bo.toString()); // 화면에 뿌림
						fis.close();
						bo.close();
					} catch (Exception e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
					
				}
				
			}
		});
		
		// 메뉴에서 저장 클릭했을 때 이벤트 처리
		saveI.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				
				int re = open.showSaveDialog(Note.this);
				if(re == JFileChooser.APPROVE_OPTION) {
					// 파일 저장 다이얼 로그를 띄움
					File file_open = open.getSelectedFile();
					// 저장할 파일명을 가져옴
					
					try {
						// 객체를 생성
						PrintWriter pw = 
						new PrintWriter(new BufferedWriter(new FileWriter(file_open)));
						pw.write(text.getText());
						pw.close();
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
					
				}
				
			}
		});
		
		// 메뉴에서 닫기를 클릭했을 때 이벤트 처리
		closeI.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				dispose(); // 창을 닫음
				System.exit(0); // 정상 종료
				
			}
		});
		
		infoI.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// 정보를 보여주는 다이얼 로그를 띄움
				JOptionPane.showMessageDialog(pane, "2022, 5, 27일 메모장 작성 / 최경은");
				
			}
		});
		
		tcolor.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				String str = e.getActionCommand();
				if(str.equals("글자색")) {
					JColorChooser cc = new JColorChooser();
					Color color = cc.showDialog(Note.this, "글자색", Color.red);
					text.setForeground(color);
				}
				
			}
		});
		
		
		//  화면에 보여질 textarea 설정
		text = new JTextArea();
		text.setCaretColor(Color.black);
		text.setSelectedTextColor(Color.white);
		text.setSelectionColor(Color.RED);
		text.setBackground(Color.white);
		
		pane.add(new JScrollPane(text));
		
		
	}
	
	public static void main(String ar[]) {
		Note note = new Note(); // 객체 생성
		note.setSize(400,300);
		note.setVisible(true);
		
	}
}
