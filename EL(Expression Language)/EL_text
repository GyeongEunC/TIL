EL(Expression Language) : 표현언어에 사용되는 태그(tag)

<%= 표현식 %> -> ${ 표현식 }

* 스트럿츠나 스프링 같은 프레임워크로 웹 개발을 하는데 사용하는 언어.
* Model2 방식의 표현언어

* 서블릿(Servlet)은 Server + Applet의 합성어로 서버에서 실해오디는 Applet의미로 자바를 이용하여 웹에서 실행되는 프로그램 기술
* 서블릿은 자바 클래스 형태의 웹 애플리케이션,
  브라우저를 통해 자바 클래스가 실행되도록 하기 위해서는 javax.servlet.http 패키지에서 제공하는
  HttpServelt 클래스를 상속받아 구현해야 함.
  서블릿 또한 자바 프로그램의 다른 클래스들처럼 자바 가상머신인 JVM에서 동작해야하므로 웹 애플리케이션을 제작할 수 있는 클래스가 제공되지 않고 톰캣을 설치하고 나면 웹 애플리케이션을 제작할 수 있는 클래스가 제공되는 데 그 클래스가 바로 HttpServlet.

* 클라이언트는 서버에 get 과 post 두 가지 방식중 하나를 요청하여 전송
  get 방식 : 주소창을 타고 넘어가기 때문에 서버로 보내는 데이터를 사용자가 그대로 볼 수 있음.
  post 방식 : html의 header를 타고 넘어가기 때문에 보안에 강하고 255자 이상의 대용량의 데이터를 전송 가능함.
  서블릿 클래스에도 doGet() 혹은 doPost() 가 있는데 요청 방식에 따라 호출되는 메소드가 달라짐.
  method 방식을 생략하면 기본값인 get 방식으로 요청

  doGet() 메소드는 throws 절로 메소드에서 발생하는 IOException, ServletException 예외를 외부에서 처리하도록 정의되어 있고, 두개의 매개 변수를 갖음.

  HttpServletRequest 형으로 선언된 첫번쨰 매개변수는 클라이언트의 요청(request)을 처리하고, HttpServletRequest 형으로 선언된 두번쨰 매개변수는 요청처리결과를 클라이언트에게 되돌리기(응답, response)을 위한 것.

  서버가 요청에 대한 처리르 마치고 클라이언트에게 결과를 되돌려주기 위해서는 두 번째 매개변수인 HttpServletRequest 로 부터 PrintWriter 형의 출력 스트림 객체를 얻어와야합니다.

* 서블릿은 자바 코드 내부에 HTML문서, JSP는 이와 반대로 HTML 문서 내부에 자바 코드가 들어가있는 형태

* 서블릿과 JSP를 비교해보면 JSP로 개발하는 편이 쉽고 간단하지만 코드영역과 디자인영역을 분리하기 위해 서블릿 사용. (MVC패턴)

* 서블릿을 요청하면 URL은 다음과 같다
- http://localhost:8181/EL(= 컨텍스트 패스)/hello

  URL 매핑이란 서블릿을 동작시키기 위해 실제로 자바 클래스명을 사용하는 대신 서블릿을 요청하기 위한 문자열(hello)을 서브릿 클래스와 매핑시키는 것을 말함. - 보안유지(실제 서블릿 클래스를 공개하지 않기 위해)

* 서블릿의 동작 원리
1. 브라우저에서 서블릿에 요청을 함
2. 그러면 WAS안에 웹서버가 서블릿 요청을 인식하여 서블릿 컨테이너에게 서블릿을 수행하도록 넘겨줌.
3. 서블릿은 스레드를 가동하여 해당 서블릿 객체를 생성하여 이를 수행.
4. 서블릿 객체의 작업이 종료되면 가동되던 스레드를 종료함.
5. 서블릿 수행 결과가 웹 서버에 전송됨.
6. 이를 클라이언트에 전송.

- 서블릿의 라이프 사이클
Instance 생성 : 서블릿 객체생성
init() : 최초 한번만 수행
doGet() 혹은 doPost() 수행 : 요청될 때마다 호출
destroy() : 톰캣 해제시 자원 해제

